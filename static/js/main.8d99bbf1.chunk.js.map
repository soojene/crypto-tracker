{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinHistory","coinId","endDate","Math","floor","Date","now","startDate","Chart","useQuery","refetchInterval","isLoading","data","type","series","name","map","price","x","time_close","y","open","high","low","close","options","theme","mode","chart","height","width","toolbar","show","grid","yaxis","xaxis","PriceBox","styled","ul","PriceList","li","Title","div","Dollor","Price","toFixed","h1","props","accentColor","Loader","span","Container","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","GoBackBtn","button","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","to","rank","symbol","description","total_supply","max_supply","path","CoinsList","bgColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","lightTheme","GlobalStyle","createGlobalStyle","ModeBtn","App","useState","setMode","onClick","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.8d99bbf1.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n    const endDate = Math.floor(Date.now() / 1000);\n    const startDate = endDate - 60 * 60 * 24 * 7 * 4;\n    return fetch(\n      `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n    ).then((response) => response.json());\n  }","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n    const { isLoading, data } = useQuery<IHistorical[]>(\n        [\"ohlcv\", coinId], \n        () => fetchCoinHistory(coinId),\n        { refetchInterval: 10000,}\n    );\n    return (\n        <div>\n        {isLoading ? (\n            \"Loading chart...\"\n        ) : (\n            <ApexChart \n            type=\"candlestick\" \n            series={[\n                {\n                name: \"Price\",\n                data: data?.map((price) => ({\n                    x: price.time_close,\n                    y: [price.open, price.high, price.low, price.close],\n                })),\n                },\n            ]} \n            options={{\n                theme:{mode:\"dark\"},\n                chart:{\n                    type: 'candlestick',\n                    height: 300,\n                    width:500,\n                    toolbar: {\n                        show: false,\n                    },\n                },\n                grid: { show: true },\n                yaxis: {\n                    show: false,\n                },\n                xaxis: {\n                    type: 'datetime'\n                },\n            }} />\n        )}\n        </div>\n    );\n}\nexport default Chart;","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport styled from 'styled-components';\n\nconst PriceBox = styled.ul`\n    background-color:gray;\n`;\n\nconst PriceList = styled.li`\n    width:100%;\n    display:flex;\n    padding: 15px 25px;\n    margin: 10px 0px;\n    :hover{\n        background-color:black;\n    }\n`;\n\nconst Title = styled.div`\n    font-weight: 600;\n    margin-right:10px;\n`;\n\nconst Dollor = styled.div`\n    font-weight:900;\n`;\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Price({ coinId }: ChartProps) {\n    const { isLoading, data } = useQuery<IHistorical[]>(\n        [\"ohlcv\", coinId], \n        () => fetchCoinHistory(coinId),\n        { refetchInterval: 10000,}\n    );\n    return (\n        <div>\n            {isLoading? (\"Loading Price...\") : (\n                <PriceBox>\n                    <PriceList>\n                        <Title>Open:</Title>\n                        <Dollor>\n                            ${data?.[28].open.toFixed(3)}\n                        </Dollor>\n                    </PriceList>\n                    <PriceList>\n                        <Title>High:</Title>\n                        <Dollor>\n                            ${data?.[28].high.toFixed(3)}\n                        </Dollor>\n                    </PriceList>\n                    <PriceList>\n                        <Title>Low:</Title>\n                        <Dollor>\n                            ${data?.[28].low.toFixed(3)}\n                        </Dollor>\n                    </PriceList>\n                    <PriceList>\n                        <Title>Close:</Title>\n                        <Dollor>\n                            ${data?.[28].close.toFixed(3)}\n                        </Dollor>\n                    </PriceList>\n                </PriceBox>\n            )}\n        </div>\n    );\n}\n\nexport default Price;","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  margin-right:80px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\nconst GoBackBtn = styled.button`\n  font-size: 30px;\n  padding:3px 20px 8px 20px;\n  border: none;\n  border-radius: 20px;\n  color: ${(props)=>props.theme.accentColor};\n  background-color: transparent;\n  margin-right: 30px;\n  cursor: pointer;\n  :hover{\n    background-color: #00000030;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n      <Link to={\"/\"}>\n        <GoBackBtn>←</GoBackBtn>\n      </Link>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              {/* <span>${tickersData?.quotes.USD.price.toFixed(0)}</span> */}\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId}/>\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Header>\n        <Helmet>\n          <title>Coins</title>\n        </Helmet>\n        <Title>Coins</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"pink\",\n  textColor: \"black\",\n  accentColor: \"yellow\",\n};\n","import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { lightTheme, theme } from './theme';\nimport { useState } from 'react';\n\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit\n}\n`;\nconst ModeBtn = styled.button`\n  position: absolute;\n  top:5px;\n  right:5px;\n  color: ${(props)=> props.theme.accentColor};\n  border-color: ${(props)=> props.theme.accentColor};\n  border: 1px solid;\n  border-radius: 20px;\n  background-color: transparent;\n  padding: 5px 20px;\n  cursor: pointer;\n  :hover{\n    background-color: #0000002d;\n  }\n`;\nfunction App() {\n  const [mode, setMode] = useState<boolean>(true);\n  const handleMode = ()=>{\n    setMode(mode? false : true);\n  }\n  return (\n    <>\n    < ThemeProvider theme={mode? theme : lightTheme}>\n      <ModeBtn onClick={handleMode}>Change Mode</ModeBtn>\n      <GlobalStyle />\n      <Router />\n      {/* <ReactQueryDevtools initialIsOpen={false} /> */}\n    </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      {/* <ThemeProvider theme={lightTheme}> */}\n        <App />\n      {/* </ThemeProvider> */}\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}