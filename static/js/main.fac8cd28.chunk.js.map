{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinHistory","coinId","endDate","Math","floor","Date","now","startDate","Chart","useQuery","refetchInterval","isLoading","data","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Price","x","title","text","align","enabled","Title","styled","h1","props","accentColor","Loader","span","Container","div","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","GoBackBtn","button","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","to","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","li","bgColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","lightTheme","GlobalStyle","createGlobalStyle","ModeBtn","App","useState","setMode","onClick","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.fac8cd28.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n    const endDate = Math.floor(Date.now() / 1000);\n    const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n    return fetch(\n      `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n    ).then((response) => response.json());\n  }","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n    const { isLoading, data } = useQuery<IHistorical[]>(\n        [\"ohlcv\", coinId], \n        () => fetchCoinHistory(coinId),\n        { refetchInterval: 10000,}\n    );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => price.close),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n               categories: data?.map((price) => price.time_close),\n             },\n             fill: {\n               type: \"gradient\",\n               gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n             },\n             colors: [\"#0fbcf9\"],\n             tooltip: {\n               y: {\n                 formatter: (value) => `$${value.toFixed(2)}`,\n               },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Price({ coinId }: ChartProps) {\n    const { isLoading, data } = useQuery<IHistorical[]>(\n        [\"ohlcv\", coinId], \n        () => fetchCoinHistory(coinId),\n        { refetchInterval: 10000,}\n    );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n                x: new Date(1538780400000),\n                y: [6632.01, 6643.59, 6620, 6630.11]\n              },\n              {\n                x: new Date(1538782200000),\n                y: [6630.71, 6648.95, 6623.34, 6635.65]\n              },\n              {\n                x: new Date(1538784000000),\n                y: [6635.65, 6651, 6629.67, 6638.24]\n              },\n              {\n                x: new Date(1538785800000),\n                y: [6638.24, 6640, 6620, 6624.47]\n              },\n              {\n                x: new Date(1538787600000),\n                y: [6624.53, 6636.03, 6621.68, 6624.31]\n              },\n              {\n                x: new Date(1538789400000),\n                y: [6624.61, 6632.2, 6617, 6626.02]\n              }\n          ]}\n          options={{\n                chart: {\n                  type: 'candlestick',\n                  height: 350\n                },\n                title: {\n                  text: 'CandleStick Chart',\n                  align: 'left'\n                },\n                xaxis: {\n                  type: 'datetime'\n                },\n                yaxis: {\n                  tooltip: {\n                    enabled: true\n                  }\n                }\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Price;","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  margin-right:80px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\nconst GoBackBtn = styled.button`\n  font-size: 30px;\n  padding:3px 20px 8px 20px;\n  border: none;\n  border-radius: 20px;\n  color: ${(props)=>props.theme.accentColor};\n  background-color: transparent;\n  margin-right: 30px;\n  cursor: pointer;\n  :hover{\n    background-color: #00000030;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n      <Link to={\"/\"}>\n        <GoBackBtn>←</GoBackBtn>\n      </Link>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              {/* <span>${tickersData?.quotes.USD.price.toFixed(0)}</span> */}\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId}/>\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Header>\n        <Helmet>\n        <Title>코인</Title>\n        </Helmet>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"pink\",\n  textColor: \"black\",\n  accentColor: \"yellow\",\n};\n","import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { lightTheme, theme } from './theme';\nimport { useState } from 'react';\n\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit\n}\n`;\nconst ModeBtn = styled.button`\n  position: absolute;\n  top:5px;\n  right:5px;\n  color: ${(props)=> props.theme.accentColor};\n  border-color: ${(props)=> props.theme.accentColor};\n  border: 1px solid;\n  border-radius: 20px;\n  background-color: transparent;\n  padding: 5px 20px;\n  cursor: pointer;\n  :hover{\n    background-color: #0000002d;\n  }\n`;\nfunction App() {\n  const [mode, setMode] = useState<boolean>(true);\n  const handleMode = ()=>{\n    setMode(mode? false : true);\n  }\n  return (\n    <>\n    < ThemeProvider theme={mode? theme : lightTheme}>\n      <ModeBtn onClick={handleMode}>Change Mode</ModeBtn>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      {/* <ThemeProvider theme={lightTheme}> */}\n        <App />\n      {/* </ThemeProvider> */}\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}